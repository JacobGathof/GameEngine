#version 430 core

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;


layout (std430, binding = 0) buffer PosBuf {
	vec4 position_buffer[];
};
layout (std430, binding = 1) buffer VelBuf {
	vec4 velocity_buffer[];
};
	

uniform float dt;
uniform vec2 center;

void main(){
	
	uint index = int(gl_GlobalInvocationID.x);
	vec4 pos = position_buffer[index];
	vec4 vel = velocity_buffer[index];
	
	vec2 accel = vec2(vel.y,-vel.x); 
	
	vel.xy += dt*accel;
	pos.xy += dt*vel.xy;
	
	pos.w -= dt;
	if(pos.w <= 0.0f){
		pos.w  = 1;
		pos.xy = center + vel.xy;
	}
	
	
	
	position_buffer[index] = pos;
	velocity_buffer[index] = vel;
	
}